create table if not exists users
(
    id                    bigint generated by default as identity primary key,
    username              varchar not null unique,
    password              varchar not null,
    email                 varchar not null unique,
    phone_number          varchar(25),
    code_for_confirmation varchar,
    enabled               bool    not null default false,
    confirmation_code     varchar(4)
);

create table if not exists locations(
                                        id bigint primary key generated by default as identity ,
                                        address varchar,
                                        coordinates varchar
);

create table if not exists posts(
    id bigint primary key generated by default as identity,
    title varchar(100) not null,
    description varchar,
    total_stars decimal default 0.0,
    review_counter int default 0,
    rating decimal default 0.0,
    date_of_publishment timestamp,
    date_of_begin timestamp,
    date_of_end timestamp,
    location_id int not null references locations(id),
    type int not null
);

create table if not exists posts_images
(
    post_id bigint not null references posts (id) on delete cascade,
    image    varchar(255) not null
);

create table if not exists users_rating
(
    user_id bigint references users (id) primary key,
    rank    varchar(255) not null,
    points  bigint default 0
);

create table if not exists users_roles
(
    user_id bigint references users (id) not null,
    role    varchar(255)                 not null,
    primary key (user_id, role),
    constraint fk_users_roles_users foreign key (user_id) references users (id) on delete cascade on update no action
);

create table if not exists landmarks
(
    id             bigint generated by default as identity primary key,
    title          varchar not null,
    description    varchar not null,
    contact_number varchar not null,
    working_hours  varchar not null,
    address        varchar not null,
    coordinates    varchar not null,
    total_stars    decimal not null default 0,
    review_counter decimal not null,
    rating         decimal,
    date_of_publishment timestamp not null,
    date_of_event       timestamp not null
);

create table if not exists events
(
    id                  bigint generated by default as identity primary key,
    title               varchar   not null,
    description         varchar   not null,
    date_of_publishment timestamp not null,
    date_of_event       timestamp not null,
    contact_number      varchar   not null,
    address             varchar   not null,
    coordinates         varchar   not null,
    total_stars         decimal,
    review_counter      decimal,
    rating              decimal,
    start_time          timestamp,
    end_time            timestamp
);

create table if not exists reviews_event
(
    id       bigint generated by default as identity primary key,
    title    varchar(50)                   not null,
    message  varchar(400),
    stars    int    default 0,
    event_id bigint references events (id) not null,
    likes    bigint default 0,
    user_id  integer
        constraint reviews_event_users_id_fk
            references users
            on delete cascade
);

create table if not exists reviews_landmark
(
    id          bigint generated by default as identity,
    title       varchar(50)                      not null,
    message     varchar(400),
    stars       int    default 0,
    landmark_id bigint references landmarks (id) not null,
    likes       bigint default 0,
    user_id     integer
        constraint reviews_landmark_users_id_fk
            references users
            on delete cascade
);

create table if not exists events_images
(
    event_id bigint       not null references events (id) on delete cascade,
    image    varchar(255) not null
);

create table if not exists landmarks_images
(
    landmark_id bigint       not null references landmarks (id) on delete cascade,
    image       varchar(255) not null
);